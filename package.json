{
  "name": "cvhere",
  "version": "1.0.0",
  "description": "CV building and searching application",
  "private": true,
  "workspaces": [
    "backend",
    "frontend"
  ],
  "scripts": {
    "dev:backend": "npm run dev --workspace=backend",
    "build:backend": "npm run build --workspace=backend",
    "start:backend": "npm run start --workspace=backend",
    "test:backend": "npm run test --workspace=backend",
    "dev:frontend": "npm run dev --workspace=frontend",
    "build:frontend": "npm run build --workspace=frontend",
    "test:frontend": "npm run test --workspace=frontend",
    "build": "npm run build:backend && npm run build:frontend",
    "test": "npm run test:backend && npm run test:frontend",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "docs:commit": "clear && bash scripts/commit/docs-commit.sh",
    "feat-docs:commit": "clear && bash scripts/commit/feature-docs-commit.sh",
    "deploy:staging": "bash scripts/deploy-backend.sh staging $(bash scripts/get-instance-ip.sh staging) && bash scripts/deploy-frontend.sh staging $(bash scripts/get-instance-ip.sh staging)",
    "deploy:production": "bash scripts/deploy-backend.sh production $(bash scripts/get-instance-ip.sh production) && bash scripts/deploy-frontend.sh production $(bash scripts/get-instance-ip.sh production)",
    "health:staging": "bash scripts/health-check.sh staging $(bash scripts/get-instance-ip.sh staging)",
    "health:production": "bash scripts/health-check.sh production $(bash scripts/get-instance-ip.sh production)",
    "terraform:setup": "bash scripts/setup-terraform-backend.sh"
  },
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}